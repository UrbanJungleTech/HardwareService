
server:
  port: ${PORT:8081}
spring:
  application:
    name: ${APPLICATION_NAME}
  datasource:
    url: ${DATABASE_URL}
    driverClassName: ${DATABASE_DRIVER}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

  cloud:
    azure:
      keyvault:
        secret:
          endpoint: ${AZURE_KEYVAULT_URI}
  jpa:
    hibernate:
      ddl-auto: create-drop
logging:
  level:
    root: ${ROOT_LOG_LEVEL:INFO}
    urbanjungletech: ${ROOT_LOG_LEVEL:DEBUG}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:INFO}
  mqtt:
    level: ${MQTT_LOG_LEVEL:INFO}
entity:
  names:
    urbanjungletech.hardwareservice.entity.HardwareControllerEntity: Hardware Controller
    urbanjungletech.hardwareservice.entity.SensorEntity: Sensor
    urbanjungletech.hardwareservice.entity.HardwareEntity: Hardware
    urbanjungletech.hardwareservice.entity.TimerEntity: Timer
    urbanjungletech.hardwareservice.entity.ScheduledSensorReadingEntity: Scheduled Sensor Reading
    urbanjungletech.hardwareservice.entity.HardwareStateEntity: Hardware State
    urbanjungletech.hardwareservice.action.entity.ActionEntity: Action
    urbanjungletech.hardwareservice.entity.SensorReadingAlertEntity: Sensor Reading Alert
    urbanjungletech.hardwareservice.entity.HardwareControllerGroupEntity: Hardware Controller Group
    urbanjungletech.hardwareservice.entity.SensorReadingRouterEntity: Sensor Reading Router

azure:
  keyvault:
    uri: ${AZURE_KEYVAULT_URI}
    enabled: ${AZURE_KEYVAULT_ENABLED:false}
    client-id: ${AZURE_KEYVAULT_CLIENT_ID}
    client-secret: ${AZURE_KEYVAULT_CLIENT_SECRET}
    tenant-id: ${AZURE_KEYVAULT_TENANT_ID}

mqtt-rpc:
  uri: ${SYSTEM_MQTT_URI}
  queue: ${SYSTEM_MQTT_QUEUE}
  enabled: ${SYSTEM_MQTT_ENABLED:true}

secure-storage:
  type: ${SECURE_STORAGE_TYPE}

weather:
  api:
    uri: ${WEATHER_API_URI}
    apiKeyParamName: ${WEATHER_API_KEY_PARAM_NAME}
    targetFieldParamName: ${WEATHER_API_TARGET_FIELD_PARAM_NAME}
    locationParamName: ${WEATHER_API_LOCATION_PARAM_NAME}
    enabled: ${WEATHER_API_ENABLED:true}

